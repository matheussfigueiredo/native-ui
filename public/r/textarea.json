{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "textarea",
  "type": "registry:ui",
  "title": "textarea",
  "description": "TextArea component",
  "dependencies": ["react-native", "native-variants", "react"],
  "files": [
    {
      "path": "components/ui/textarea.tsx",
      "content": "import { type ComponentProps, memo } from \"react\";\r\nimport { TextInput, View } from \"react-native\";\r\nimport { useInteractive } from \"@/hooks/use-interactive\";\r\nimport { cn } from \"@/lib/cn\";\r\nimport { styled, theme } from \"@/lib/nva\";\r\nimport { alpha, type VariantProps } from \"native-variants\";\r\n\r\nconst textAreaVariants = styled((ctx, t) =>\r\n  ctx({\r\n    slots: [\"root\", \"field\", \"textarea\", \"icon\", \"placeholder\"],\r\n    base: {\r\n      root: {\r\n        minHeight: 120,\r\n        borderWidth: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        borderRadius: t.radii.lg,\r\n        paddingLeft: t.spacing[\"4\"],\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"flex-start\",\r\n      },\r\n      field: { flex: 1 },\r\n      textarea: {\r\n        flex: 1,\r\n        height: \"100%\",\r\n        textAlignVertical: \"top\",\r\n        paddingRight: t.spacing[\"4\"],\r\n        paddingTop: theme?.spacing[\"2\"],\r\n        borderTopEndRadius: t.radii.lg,\r\n        borderBottomEndRadius: t.radii.lg,\r\n      },\r\n      placeholder: {\r\n        color: t.colors.mutedForeground,\r\n      },\r\n    },\r\n    variants: {\r\n      focus: {\r\n        true: {\r\n          root: {\r\n            borderColor: t.colors.ring,\r\n            backgroundColor: t.colors.transparent,\r\n          },\r\n        },\r\n        false: {\r\n          root: {\r\n            borderColor: t.colors.input,\r\n            backgroundColor: alpha(t.colors.input, 30),\r\n          },\r\n        },\r\n      },\r\n      size: {\r\n        default: {\r\n          root: { height: 40 },\r\n        },\r\n        lg: {\r\n          root: { height: 46 },\r\n        },\r\n      },\r\n      disabled: {\r\n        true: {\r\n          root: {\r\n            opacity: t.opacity[\"50\"],\r\n            pointerEvents: \"none\",\r\n            userSelect: \"none\",\r\n          },\r\n        },\r\n        false: {\r\n          root: {\r\n            opacity: t.opacity[\"100\"],\r\n            pointerEvents: \"auto\",\r\n            userSelect: \"auto\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"default\",\r\n      focus: false,\r\n      disabled: false,\r\n    },\r\n  })\r\n);\r\n\r\nfunction TextAreaComponent({\r\n  style,\r\n  disabled,\r\n  ...props\r\n}: Omit<ComponentProps<typeof TextInput>, \"editable\"> &\r\n  VariantProps<typeof textAreaVariants>) {\r\n  const { focus, onFocus, onBlur } = useInteractive();\r\n  const { root, textarea, placeholder } = textAreaVariants({ focus, disabled });\r\n\r\n  return (\r\n    <View style={cn(root, style) as any}>\r\n      <TextInput\r\n        multiline\r\n        onBlur={onBlur}\r\n        onFocus={onFocus}\r\n        editable={!disabled}\r\n        placeholderTextColor={placeholder?.color}\r\n        style={cn(textarea, style, {\r\n          height: \"100%\",\r\n          textAlignVertical: \"top\",\r\n        })}\r\n        {...props}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst TextArea = memo(TextAreaComponent);\r\n\r\nexport { TextArea };\r\n",
      "type": "registry:ui"
    },
    {
      "path": "hooks/use-interactive.ts",
      "content": "import React from \"react\";\r\nimport { Keyboard } from \"react-native\";\r\n\r\nexport function useInteractive() {\r\n  const [focus, setFocus] = React.useState<boolean>(false);\r\n\r\n  function onFocus() {\r\n    setFocus(true);\r\n  }\r\n\r\n  function onBlur() {\r\n    setFocus(false);\r\n    requestAnimationFrame(() => {\r\n      Keyboard.dismiss();\r\n    });\r\n  }\r\n\r\n  return { focus, onFocus, onBlur };\r\n}\r\n",
      "type": "registry:hook"
    }
  ]
}
