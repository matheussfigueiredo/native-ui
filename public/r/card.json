{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "card",
  "type": "registry:ui",
  "title": "card",
  "description": "Card component",
  "dependencies": ["react-native", "native-variants", "react"],
  "files": [
    {
      "path": "components/ui/card.tsx",
      "content": "import { cn } from \"@/lib/cn\";\r\nimport { styled } from \"@/lib/nva\";\r\nimport type { ComponentProps } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\n\r\nconst cardVariants = styled((ctx, t) =>\r\n  ctx({\r\n    slots: [\"root\", \"title\", \"description\", \"header\", \"content\", \"footer\"],\r\n    base: {\r\n      root: {\r\n        borderWidth: 1,\r\n        display: \"flex\",\r\n        gap: t.spacing[\"6\"],\r\n        flexDirection: \"column\",\r\n        borderRadius: t.radii[\"xl\"],\r\n        borderColor: t.colors.border,\r\n        backgroundColor: t.colors.card,\r\n        paddingVertical: t.spacing[\"6\"],\r\n      },\r\n      title: {\r\n        fontWeight: \"600\",\r\n        fontSize: t.fontSizes.xl,\r\n        color: t.colors.cardForeground,\r\n      },\r\n      description: {\r\n        fontSize: t.fontSizes.sm,\r\n        color: t.colors.mutedForeground,\r\n      },\r\n      header: {\r\n        display: \"flex\",\r\n        gap: t.spacing[\"1.5\"],\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\",\r\n        paddingHorizontal: t.spacing[\"6\"],\r\n      },\r\n      content: {\r\n        paddingHorizontal: t.spacing[\"6\"],\r\n      },\r\n      footer: {\r\n        display: \"flex\",\r\n        gap: t.spacing[\"3\"],\r\n        alignItems: \"center\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"flex-end\",\r\n        paddingHorizontal: t.spacing[\"6\"],\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nfunction Card({ style, ...props }: ComponentProps<typeof View>) {\r\n  const styles = cardVariants();\r\n\r\n  return <View style={cn(styles.root, style)} {...props} />;\r\n}\r\n\r\nfunction CardTitle({ style, ...props }: ComponentProps<typeof Text>) {\r\n  const styles = cardVariants();\r\n\r\n  return <Text style={cn(styles.title, style)} {...props} />;\r\n}\r\n\r\nfunction CardDescription({ style, ...props }: ComponentProps<typeof Text>) {\r\n  const styles = cardVariants();\r\n\r\n  return <Text style={cn(styles.description, style)} {...props} />;\r\n}\r\n\r\nfunction CardHeader({ style, ...props }: ComponentProps<typeof View>) {\r\n  const styles = cardVariants();\r\n\r\n  return <View style={cn(styles.header, style)} {...props} />;\r\n}\r\n\r\nfunction CardContent({ style, ...props }: ComponentProps<typeof View>) {\r\n  const styles = cardVariants();\r\n\r\n  return <View style={cn(styles.content, style)} {...props} />;\r\n}\r\n\r\nfunction CardFooter({ style, ...props }: ComponentProps<typeof View>) {\r\n  const styles = cardVariants();\r\n\r\n  return <View style={cn(styles.footer, style)} {...props} />;\r\n}\r\n\r\nexport {\r\n  Card,\r\n  CardTitle,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardContent,\r\n  CardFooter,\r\n};\r\n",
      "type": "registry:ui"
    }
  ]
}
